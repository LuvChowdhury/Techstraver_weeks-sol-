import speech_recognition as sr
import pyttsx3
import webbrowser
import os
import requests
import datetime
import random

# Set up Text-to-Speech Engine
engine = pyttsx3.init()

def speak(text):
    engine.say(text)
    engine.runAndWait()

# Function to capture voice input
def listen():
    recognizer = sr.Recognizer()
    with sr.Microphone() as source:
        print("Listening...")
        recognizer.adjust_for_ambient_noise(source, duration=0.5)
        audio = recognizer.listen(source)
        
    try:
        print("Recognizing...")
        query = recognizer.recognize_google(audio)
        print(f"User said: {query}")
    except sr.UnknownValueError:
        speak("Sorry, I didn't catch that. Could you please repeat?")
        return None
    except sr.RequestError:
        speak("Sorry, the service is down. Please try again later.")
        return None

    return query.lower()

# Function to process the command and perform an action
def process_command(command):
    # NLP for intent recognition (using basic keyword matching for simplicity)
    if 'time' in command:
        current_time = datetime.datetime.now().strftime('%I:%M %p')
        speak(f"The current time is {current_time}")
    elif 'open' in command:
        if 'browser' in command:
            speak("Opening your browser.")
            webbrowser.open('http://google.com')
        elif 'file' in command:
            speak("Which file do you want to open?")
            file_name = listen()
            try:
                os.startfile(file_name)
                speak(f"Opening {file_name}")
            except Exception as e:
                speak("I can't find that file.")
    elif 'weather' in command:
        api_key = "your_openweathermap_api_key"
        speak("Please tell me the city.")
        city = listen()
        if city:
            weather_data = get_weather(city, api_key)
            if weather_data:
                speak(weather_data)
    elif 'joke' in command:
        tell_joke()
    else:
        speak("I am not sure how to help with that.")

# Function to fetch weather data
def get_weather(city, api_key):
    try:
        url = f"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={api_key}&units=metric"
        response = requests.get(url)
        data = response.json()

        if data['cod'] == 200:
            main = data['main']
            temperature = main['temp']
            weather_description = data['weather'][0]['description']
            weather_report = f"The current temperature in {city} is {temperature}Â°C with {weather_description}."
            return weather_report
        else:
            return "Sorry, I couldn't retrieve the weather information."
    except Exception as e:
        return "There was an error getting the weather information."

# Function to tell a joke
def tell_joke():
    jokes = [
        "Why don't scientists trust atoms? Because they make up everything!",
        "How does a penguin build its house? Igloos it together.",
        "Why don't skeletons fight each other? They don't have the guts."
    ]
    joke = random.choice(jokes)
    speak(joke)

# Function to run the assistant
def jarvis():
    speak("Hello, I am your assistant. How can I help you today?")
    
    while True:
        command = listen()
        if command:
            process_command(command)

# Start the assistant
jarvis()
